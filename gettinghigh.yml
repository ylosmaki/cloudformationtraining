AWSTemplateFormatVersion: 2010-09-09
Description: Academy Demo CloudFormation

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
  MyQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 5
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref S3Bucket
                - /*
      Bucket: !Ref S3Bucket
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: securitygroup for EC2 and ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LbSecurityGroup
      Tags:
        - Key: Name
          Value: Maija
      VpcId: vpc-32cc224b
  LbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: securitygroup for loadbalancer
      VpcId: vpc-32cc224b
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Maija

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - subnet-018ba049
        - subnet-1e035878
      SecurityGroups:
        - !Ref LbSecurityGroup
  MyLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyLBTargetGroup
  MyLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: vpc-32cc224b
      Port: 80
      Protocol: HTTP

  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: [eu-west-1a]
      LaunchConfigurationName: !Ref MyLaunchConfig
      MinSize: "1"
      MaxSize: "2"
      TargetGroupARNs:
        - Ref: MyLBTargetGroup

  MyLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: !Ref LatestAmiId
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - "amazon-linux-extras install epel"
              - "amazon-linux-extras install nginx1"
              - "systemctl start nginx"
      SecurityGroups:
        - Ref: MySecurityGroup
      InstanceType: t2.micro

Outputs:
  MyLoadBalancerDNSName:
    Description: The DNSName of the backup load balancer
    Value: !GetAtt MyLoadBalancer.DNSName
  WebsiteURL:
    Value: !GetAtt
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content